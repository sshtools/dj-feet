<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sshtools</groupId>
		<artifactId>dj-feet</artifactId>
		<version>2.0.0-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>
	<artifactId>dj-feet-installer</artifactId>
	<packaging>pom</packaging>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>dj-feet-daemon</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>dj-feet-ui</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>build-number-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<name>product.version</name>
							<value>${project.version}</value>
							<regex>^([0-9]+)\.([0-9]+)\.([0-9]+)-([0-9A-Za-z]+)$</regex>
							<replacement>$1.$2.$3</replacement>
							<failIfNoMatch>false</failIfNoMatch>
						</configuration>
					</execution>
					<execution>
						<id>product-version-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<name>build.number</name>
							<value>0${env.BUILD_NUMBER}</value>
							<regex>^(?:0?)([0-9]+)(?:\$\{env\.BUILD_NUMBER\})?$</regex>
							<replacement>$1</replacement>
							<failIfNoMatch>false</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>mac-jfx</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<javafx.os.family>mac</javafx.os.family>
			</properties>
		</profile>
		<profile>
			<id>linux-jfx</id>
			<activation>
				<os>
					<family>linux</family>
				</os>
			</activation>
			<properties>
				<javafx.os.family>linux</javafx.os.family>
			</properties>
		</profile>
		<profile>
			<id>windows-jfx</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<javafx.os.family>windows</javafx.os.family>
			</properties>
		</profile>
		<!-- Merge Installers -->
		<profile>
			<id>merge-installers</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.sshtools</groupId>
						<artifactId>updatesxmlmerger-maven-plugin</artifactId>
						<version>0.0.1</version>
						<configuration>
							<inputs>
								<input>${project.build.directory}/media-macos/updates.xml</input>
								<input>${project.build.directory}/media-windows/updates.xml</input>
								<input>${project.build.directory}/media-linux/updates.xml</input>
							</inputs>
							<output>${project.build.directory}/media/updates.xml</output>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Graal Native Image -->
		<profile>
			<id>native-images</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.gluonhq</groupId>
						<artifactId>gluonfx-maven-plugin</artifactId>
						<version>${gluonfx.maven.plugin.version}</version>
						<configuration>
							<mainClass>${main.class}</mainClass>
						</configuration>
						<executions>
							<execution>
								<id>pushsftp-jfx-native-image</id>
								<?m2e ignore?>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Flatpak -->
		<profile>
			<id>flatpak</id>
			<build>
				<plugins>
					<plugin>
						<groupId>uk.co.bithatch</groupId>
						<artifactId>maven-flatpak-plugin</artifactId>
						<version>0.0.1-SNAPSHOT</version>
						<executions>
							<execution>
								<id>jaul-toolbox-native-image</id>
								<phase>package</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<modules>false</modules>
									<manifest>
										<sdkExtensions>
											<sdkExtension>
												org.freedesktop.Sdk.Extension.openjdk17</sdkExtension>
										</sdkExtensions>
										<finishArgs>
											<finishArg>--socket=session-bus</finishArg>
											<finishArg>--socket=x11</finishArg>
											<finishArg>--socket=ssh-auth</finishArg>
											<finishArg>--device=dri</finishArg>
											<finishArg>--share=network</finishArg>
											<finishArg>--share=ipc</finishArg>
											<finishArg>--filesystem=home</finishArg>
										</finishArgs>
									</manifest>
									<launcherPreCommands>
										<launcherPreCommand>/app/jre/bin/java
											-version</launcherPreCommand>
									</launcherPreCommands>
									<excludeArtifacts>
										<excludeArtifact>com.install4j</excludeArtifact>
									</excludeArtifacts>
									<mainClass>
										com.sshtools.djfeet.DJFeet</mainClass>
									<iconFile>src/main/svg/icon.svg</iconFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>install4j-installers</id>
			<activation>
				<property>
					<name>buildInstaller</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<configuration>
							<outputDirectory>
								${project.build.directory}/dependencies</outputDirectory>
						</configuration>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<stripVersion>true</stripVersion>
									<outputDirectory>
										${project.build.directory}/dependencies/common</outputDirectory>
									<excludeClassifiers>
										linux,mac,win,linux-aarch64,jpms</excludeClassifiers>
								</configuration>
							</execution>
							<execution>
								<id>copy-javafx-win</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<stripVersion>true</stripVersion>
									<outputDirectory>
										${project.build.directory}/dependencies/win</outputDirectory>
									<artifactItems>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-base</artifactId>
											<version>${javafx.version}</version>
											<classifier>win</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-controls</artifactId>
											<version>${javafx.version}</version>
											<classifier>win</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-graphics</artifactId>
											<version>${javafx.version}</version>
											<classifier>win</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-fxml</artifactId>
											<version>${javafx.version}</version>
											<classifier>win</classifier>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copy-javafx-mac</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<stripVersion>true</stripVersion>
									<outputDirectory>
										${project.build.directory}/dependencies/mac</outputDirectory>
									<artifactItems>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-base</artifactId>
											<version>${javafx.version}</version>
											<classifier>mac</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-controls</artifactId>
											<version>${javafx.version}</version>
											<classifier>mac</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-graphics</artifactId>
											<version>${javafx.version}</version>
											<classifier>mac</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-fxml</artifactId>
											<version>${javafx.version}</version>
											<classifier>mac</classifier>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copy-javafx-linux</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<stripVersion>true</stripVersion>
									<outputDirectory>
										${project.build.directory}/dependencies/linux</outputDirectory>
									<artifactItems>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-base</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-controls</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-graphics</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-fxml</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux</classifier>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copy-javafx-linux-aarch64</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<stripVersion>true</stripVersion>
									<outputDirectory>
										${project.build.directory}/dependencies/linux-aarch64</outputDirectory>
									<artifactItems>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-base</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux-aarch64</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-controls</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux-aarch64</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-graphics</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux-aarch64</classifier>
										</artifactItem>
										<artifactItem>
											<groupId>org.openjfx</groupId>
											<artifactId>javafx-fxml</artifactId>
											<version>${javafx.version}</version>
											<classifier>linux-aarch64</classifier>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.install4j</groupId>
						<artifactId>install4j-maven</artifactId>
						<executions>
							<execution>
								<id>compile-installers</id>
								<phase>package</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<variables>
										<build.phase>${build.phase}</build.phase>
									</variables>
									<release>${product.version}-${build.number}</release>
									<mediaTypes>${build.mediaTypes}</mediaTypes>
									<projectFile>${build.install4j.project}</projectFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>